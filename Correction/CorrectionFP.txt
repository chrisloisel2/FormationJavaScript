// Exercices sur .filter()
// Filtrer les nombres pairs
let nombres = [1, 2, 3, 4, 5, 6];
let pairs = nombres.filter(num => num % 2 === 0);

// Filtrer les chaînes de caractères longues
let chaines = ["chat", "chien", "éléphant", "tigre"];
let longuesChaines = chaines.filter(chaine => chaine.length > 5);

// Exercices sur .map()
// Noms en majuscules
let noms = ["Alice", "Bob", "Charlie"];
let majuscules = noms.map(nom => nom.toUpperCase());

// Calculer le carré des nombres
let carres = nombres.map(num => num * num);

// Exercices sur .reduce()
// Calculer la somme
let somme = nombres.reduce((acc, num) => acc + num, 0);

// Compter le nombre d'occurrences
let occurrences = chaines.reduce((acc, chaine) => {
  acc[chaine] = (acc[chaine] || 0) + 1;
  return acc;
}, {});

// Exercices sur .sort()
// Trier par âge
let personnes = [{ nom: "Alice", age: 25 }, { nom: "Bob", age: 30 }];
personnes.sort((a, b) => a.age - b.age);

// Trier les chaînes alphabétiquement
let mots = ["banane", "apple", "cerise"];
mots.sort();

// Exercices sur .find()
// Trouver par nom
let alice = personnes.find(personne => personne.nom === "Alice");

// Trouver le premier nombre supérieur à 10
let premierSup10 = nombres.find(num => num > 10);

// Affichage des résultats (optionnel)
console.log({ pairs, longuesChaines, majuscules, carres, somme, occurrences, personnes, mots, alice, premierSup10 });
